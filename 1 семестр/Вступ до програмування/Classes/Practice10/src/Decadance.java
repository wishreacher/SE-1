/*
    Написати клас, що буде містити наступні методи:
    - метод, що 10 разів виводить на екран ім'я й прізвище.
    - метод, що виводить таблицю квадратів перших десяти цілих позитивних чисел.
    - метод, що виводить таблицю квадратів перших п'яти цілих позитивних непарних чисел.
    - метод, що обчислює суму перших n цілих позитивних цілих чисел.
        Кількість сумуємих чисел повинна вводитися під час роботи програми.
    - метод, що обчислює суму перших n членів ряду 1, 3, 5, 7, ....
        Кількість сумуємих чисел повинна вводитися під час роботи програми.
    - метод, що обчислює суму перших n членів ряду 1+1/2+1/3+1/4+...
    - метод, що виводить таблицю степенів двійки (від нульової до десятої).
    - метод, що обчислює факторіал уведеного із клавіатури числа.
    - метод, що виводить таблицю значень функції y = -2,4х2+5х-3 у діапазоні від -2 до 2 із кроком 0,5.
    - метод, що генерує 10 випадкових чисел у діапазоні від 1 до 10, виводить ці числа на екран й
        обчислює їх середнє арифметичне.
    - метод, що виводить на екран таблицю вартості, наприклад, яблук у діапазоні від 100 гм. до 1 кг із
        кроком 100.
    - метод перевірки вміння складати й віднімати числа в межах 100. Програма повинна вивести 10
        прикладів, причому в кожному прикладі зменшуване повинне бути більше або дорівнювати числу що
        віднімає, тобто не допускається пропонувати випробуваному приклади з негативним результатом.
        Оцінка виставляється за наступним правилом: за 10 правильних відповідей - "відмінно", за 9 й 8
        -"добре", за 7 й 6 - "задовільно", за 5 і менш - "погано".
    - метод, що обчислює суму й середнє арифметичне послідовності позитивних чисел, які вводяться
        із клавіатури.
    - метод, що визначає максимальне число з уведеної із клавіатури послідовності позитивних чисел
        (довжина послідовності не обмежена).
    - метод, що перевіряє, чи є ціле число, уведене користувачем, простим.
    - метод, що "задумує" число в діапазоні від 1 до 100 і пропонує користувачеві вгадати число за
        7 спроб. На кожному кроці комп'ютер повідомляє "більше" або "менше" загадане ним число відносно
        введеного користувачем.

    File: Decadance.java
    Author: Федорич Володимир
 */

import acm.program.ConsoleProgram;

import java.util.random.RandomGenerator;

public class Decadance extends ConsoleProgram {
    RandomGenerator rgen = RandomGenerator.getDefault();
    public void run() {
        while(true){
            getConsole().clear();
            printMenuOptions();
            int selection = readInt("Введіть номер завдання: ");
            while(selection <= 0 || selection > 16){
                selection = readInt("Неправильно. Введіть номер завдання: ");
            }
            callFunctions(selection);
            exitOptions();
        }
    }

    private void printMenuOptions() {
        println("1. Вивести ім'я й прізвище");
        println("2. Таблиця квадратів перших десяти цілих позитивних чисел");
        println("3. Таблиця квадратів перших п'яти цілих позитивних непарних чисел");
        println("4. Сума перших n цілих позитивних цілих чисел");
        println("5. Сума перших n членів ряду 1, 3, 5, 7, ...");
        println("6. Сума перших n членів ряду 1+1/2+1/3+1/4+...");
        println("7. Таблиця степенів двійки (від нульової до десятої)");
        println("8. Факторіал уведеного із клавіатури числа");
        println("9. Таблиця значень функції y = -2,4х2+5х-3 у діапазоні від -2 до 2 із кроком 0,5");
        println("10. 10 випадкових чисел у діапазоні від 1 до 10");
        println("11. Таблиця вартості, наприклад, яблук у діапазоні від 100 гм. до 1 кг із кроком 100");
        println("12. Перевірка вміння складати й віднімати числа в межах 100");
        println("13. Сума й середнє арифметичне послідовності позитивних чисел, які вводяться із клавіатури");
        println("14. Максимальне число з уведеної із клавіатури послідовності позитивних чисел");
        println("15. Перевірка, чи є ціле число, уведене користувачем, простим");
        println("16. Вгадай число");
    }

    //TODO: add continuous testing

    //метод, що 10 разів виводить на екран ім'я й прізвище.
    private void printName() {
        for (int i = 0; i < 10; i++) {
            println("Тайлер Дерден");
        }
    }
    //метод, що виводить таблицю квадратів перших десяти цілих позитивних чисел.
    private void printSquares() {
        for (int i = 1; i < 11; i++) {
            println(i + " - " + i * i);
        }
    }

    //метод, що виводить таблицю квадратів перших п'яти цілих позитивних непарних чисел.
    private void printOddSquares() {
        for (int i = 1; i < 10; i += 2) {
            println(i + " - " + i * i);
        }
    }

    //метод, що обчислює суму перших n цілих позитивних цілих чисел.
    // Кількість сумуємих чисел повинна вводитися під час роботи програми.
    private void sumOfN() {
        while(true){
            int n = readInt("Введіть кількість чисел: ");
            while(n <= 0) {
                n = readInt("Введіть кількість чисел: ");
            }
            int sum = 0;
            for (int i = 1; i < n + 1; i++) {
                sum += i;
            }
            println("Сума: " + sum);
        }
    }

    //метод, що обчислює суму перших n членів ряду 1, 3, 5, 7, ....
    // Кількість сумуємих чисел повинна вводитися під час роботи програми.
    private void sumOfN2() {
        int n = readInt("Введіть кількість чисел: ");
        while (n <= 0) {
            n = readInt("Введіть кількість чисел: ");
        }
        int sum = 0;
        for (int i = 0; i < n; i++) {
            sum += 2 * i + 1;
        }
        println("Сума: " + sum);
    }

    //метод, що обчислює суму перших n членів ряду 1+1/2+1/3+1/4+...
    private void sumOfN3() {
        int n = readInt("Введіть кількість чисел: ");
        while (n <= 0) {
            n = readInt("Введіть кількість чисел: ");
        }
        double sum = 0;
        for (int i = 1; i <= n; i++) {
            sum += 1.0 / i;
        }
        println("Сума: " + sum);
    }

    //метод, що виводить таблицю степенів двійки (від нульової до десятої).
    private void printPowersOf2() {
        for (int i = 0; i <= 10; i++) {
            println(Math.pow(2, i));
        }
    }

    //метод, що обчислює факторіал уведеного із клавіатури числа.
    private void factorial() {
        int n = readInt("Введіть число: ");
        while (n < 0) {
            n = readInt("Введіть число: ");
        }
        if (n == 0) {
            println("Факторіал: 1");
            return;
        }

        int factorial = 1;
        for (int i = 1; i <= n; i++) {
            factorial *= i;
        }
        println("Факторіал: " + factorial);
    }

    //метод, що виводить таблицю значень функції y = -2,4х2+5х-3 у діапазоні від -2 до 2 із кроком 0,5.
    private void printFunction() {
        for (double x = -2; x <= 2; x += 0.5) {
            println((-2.4 * x * x) + (5 * x) - 3);
        }
    }

    //метод, що генерує 10 випадкових чисел у діапазоні від 1 до 10, виводить ці числа на екран й обчислює їх середнє арифметичне.
    private void randomNumbers() {
        int sum = 0;
        for (int i = 0; i < 10; i++) {
            int number = (rgen.nextInt(1, 10));
            println(number);
            sum += number;
        }
        println("Середнє арифметичне: " + sum / 10.0);
    }

    //метод, що виводить на екран таблицю вартості, наприклад, яблук у діапазоні від 100 гм. до 1 кг із кроком 100
    // ціна за кілограм має вводитись з клавіатури.
    private void printPriceTable() {
        int price = readInt("Введіть ціну за кілограм: ");
        while (price <= 0) {
            price = readInt("Введіть ціну за кілограм: ");
        }
        for (int i = 100; i <= 1000; i += 100) {
            println(i + " гр. - " + i / 1000.0 * price + " грн.");
        }
    }

    /*
        метод перевірки вміння складати й віднімати числа в межах 100.
        Програма повинна вивести 10 прикладів, причому в кожному прикладі зменшуване повинне
        бути більше або дорівнювати числу що віднімає, тобто не допускається пропонувати
        випробуваному приклади з негативним результатом. Оцінка виставляється за наступним
        правилом: за 10 правильних відповідей - "відмінно", за 9 й 8 -"добре", за 7 й 6 -
        "задовільно", за 5 і менш - "погано".
    */
    private void additionAndSubtraction() {
        int correctAnswers = 0;
        for (int i = 0; i < 10; i++) {
            int a = rgen.nextInt(0, 100);
            int b = rgen.nextInt(0, 100); //TODO тут може бути помилка
            if (a < b) {
                int temp = a;
                a = b;
                b = temp;
            }
            int answer = readInt(a + " - " + b + " = ");
            if (answer == a - b) {
                correctAnswers++;
            }
        }

        println("Ваша оцінка: " + correctAnswers);
        switch (correctAnswers) {
            case 10 -> println("Відмінно");
            case 9, 8 -> println("Добре");
            case 7, 6 -> println("Задовільно");
            default -> println("Погано");
        }
    }

    //метод, що обчислює суму й середнє арифметичне послідовності позитивних чисел, які вводяться із клавіатури.
    private void sumAndAverage() {
        int sum = 0;
        int count = 0;
        while (true) {
            int number = readInt("Введіть додатнє число: ");
            while(number < 0){
                number = readInt("Неправильно. Введіть додатнє число: ");
            }
            if (number == 0) {
                break;
            }
            sum += number;
            count++;
        }
        println("Сума: " + sum);
        println("Середнє арифметичне: " + sum / (double) count);
    }

    //метод, що визначає максимальне число з уведеної із клавіатури послідовності
    //позитивних чисел (довжина послідовності не обмежена).
    private void maxNumber() {
        int max = 0;
        while (true) {
            int number = readInt("Введіть число: ");
            while(number < 0){
                number = readInt("Неправильно. Введіть додатнє число: ");
            }
            if (number == 0) {
                break;
            }
            if (number > max) {
                max = number;
            }
        }
        println("Максимальне число: " + max);
    }

    //метод, що перевіряє, чи є ціле число, уведене користувачем, простим.
    private void isPrime() {
        int number = readInt("Введіть число: ");
        while(number <= 0){
            number = readInt("Неправильно. Введіть ціле додатнє число: ");
        }
        boolean isPrime = true;
        for (int i = 2; i < number; i++) {
            if (number % i == 0) {
                isPrime = false;
            }
        }
        if (isPrime) {
            println("Просте");
        } else {
            println("Складене");
        }
    }

    /*
    метод, що "задумує" число в діапазоні від 1 до 100 і пропонує
    користувачеві вгадати число за 7 спроб. На кожному кроці комп'ютер
    повідомляє "більше" або "менше" загадане ним число відносно введеного користувачем.
     */
    private void guessNumber() {
        int number = rgen.nextInt(1, 100);
        println("DEBUG" + number); //TODO remove
        int steps = 1;

        for (int i = 0; i < 7; i++) {
            int guess = readInt("Введіть число: ");
            while(guess <= 0 || guess > 100){
                guess = readInt("Неправильно. Введіть число в діапазоні 1-100: ");
            }
            if (guess == number) {
                println("Ви вгадали за " + steps + " спроб");
                break;
            } else if (guess < number) {
                println("Загадане число більше");
            } else {
                println("Загадане число менше");
            }
            steps++;
        }
        println("Ви не вгадали!" );
    }

    private void printDescription(String description){
        getConsole().clear();
        println(description);
    }

    private void callFunctions(int selection) {
        String description;
        switch (selection) {
            case 1 -> {
                description = "метод, що 10 разів виводить на екран ім'я й прізвище.";
                printDescription(description);
                printName();
            }
            case 2 -> {
                description = "метод, що виводить таблицю квадратів перших десяти цілих позитивних чисел.";
                printDescription(description);
                printSquares();
            }
            case 3 -> {
                description = "метод, що виводить таблицю квадратів перших п'яти цілих позитивних непарних чисел.";
                printDescription(description);
                printOddSquares();
            }
            case 4 -> {
                description = "метод, що обчислює суму перших n цілих позитивних цілих чисел.\n" +
                        "Кількість сумуємих чисел повинна вводитися під час роботи програми.";
                printDescription(description);
                sumOfN();
            }
            case 5 -> {
                description = "метод, що обчислює суму перших n членів ряду 1, 3, 5, 7, ....\n" +
                        "Кількість сумуємих чисел повинна вводитися під час роботи програми.";
                printDescription(description);
                sumOfN2();
            }
            case 6 -> {
                description = "метод, що обчислює суму перших n членів ряду 1+1/2+1/3+1/4+...";
                printDescription(description);
                sumOfN3();
            }
            case 7 -> {
                description = "метод, що виводить таблицю степенів двійки (від нульової до десятої).";
                printDescription(description);
                printPowersOf2();
            }
            case 8 -> {
                description = "метод, що обчислює факторіал уведеного із клавіатури числа.";
                printDescription(description);
                factorial();
            }
            case 9 -> {
                description = "метод, що виводить таблицю значень функції y = -2,4х2+5х-3 у діапазоні від -2 до 2 із кроком 0,5.";
                printDescription(description);
                printFunction();
            }
            case 10 -> {
                description = "метод, що генерує 10 випадкових чисел у діапазоні від 1 до 10, виводить ці числа на екран й обчислює їх середнє арифметичне.";
                printDescription(description);
                randomNumbers();
            }
            case 11 -> {
                description = "метод, що виводить на екран таблицю вартості, наприклад, яблук у діапазоні від 100 гм. до 1 кг із кроком 100\n" +
                        "ціна за кілограм має вводитись з клавіатури.";
                printDescription(description);
                printPriceTable();
            }
            case 12 -> {
                description = "метод перевірки вміння складати й віднімати числа в межах 100.\n" +
                        "Програма повинна вивести 10 прикладів, причому в кожному прикладі зменшуване повинне\n" +
                        "бути більше або дорівнювати числу що віднімає, тобто не допускається пропонувати\n" +
                        "випробуваному приклади з негативним результатом. Оцінка виставляється за наступним\n" +
                        "правилом: за 10 правильних відповідей - \"відмінно\", за 9 й 8 -\"добре\", за 7 й 6 -\n" +
                        "\"задовільно\", за 5 і менш - \"погано\".";
                printDescription(description);
                additionAndSubtraction();
            }
            case 13 -> {
                description = "метод, що обчислює суму й середнє арифметичне послідовності позитивних чисел, які вводяться із клавіатури.";
                printDescription(description);
                sumAndAverage();
            }
            case 14 -> {
                description = "метод, що визначає максимальне число з уведеної із клавіатури послідовності\n" +
                        "позитивних чисел (довжина послідовності не обмежена).";
                printDescription(description);
                maxNumber();
            }
            case 15 -> {
                description = "метод, що перевіряє, чи є ціле число, уведене користувачем, простим.";
                printDescription(description);
                isPrime();
            }
            case 16 -> {
                description = "метод, що \"задумує\" число в діапазоні від 1 до 100 і пропонує\n" +
                        "користувачеві вгадати число за 7 спроб. На кожному кроці комп'ютер\n" +
                        "повідомляє \"більше\" або \"менше\" загадане ним число відносно введеного користувачем.";
                printDescription(description);
                guessNumber();
            }
        }
    }

    private void exitOptions(){
        println(""); //skips the line
        int shouldExit = readInt("To close enter 0, to come back to menu press 1 ");
        while (shouldExit != 0 && shouldExit != 1) {
            shouldExit = readInt("Wrong number! To close enter 0, to come back to menu press 1 ");
        }
        if(shouldExit == 0) {
            exit();
        }
    }
}
